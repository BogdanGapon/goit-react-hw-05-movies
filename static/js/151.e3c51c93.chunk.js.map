{"version":3,"file":"static/js/151.e3c51c93.chunk.js","mappings":"qRAIMA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kEAIRE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,8CAIRI,EAAqBJ,EAAAA,GAAAA,IAAH,0CAIlBK,EAAmBL,EAAAA,GAAAA,IAAH,yGAMhBM,EAAmBN,EAAAA,GAAAA,QAAH,2KAOhBO,EAAcP,EAAAA,GAAAA,IAAH,wDAKXQ,GAAaR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,mF,SCyEhB,EA7FqB,WAAO,IAAD,QACnBU,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgDJ,EAAAA,EAAAA,UAAS,IAAzD,eAAOK,EAAP,KAAyBC,EAAzB,KACA,GAAsBN,EAAAA,EAAAA,UAAS,IAA/B,eAAOO,EAAP,KAAYC,EAAZ,KACA,GAAsCR,EAAAA,EAAAA,UAAS,IAA/C,eAAOS,EAAP,KAAoBC,EAApB,KA4BA,OA3BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAqBvB,OApBAC,EAAAA,EAAAA,IAAA,UACUC,EAAAA,IADV,OAC+BjB,GAD/B,OACoCkB,EAAAA,IAAO,CAAEC,OAAQL,EAAWK,SAC7DC,MAAK,SAAAC,GACJ,MAEIA,EADFC,KAAQC,EADV,EACUA,aAAclB,EADxB,EACwBA,MAAOmB,EAD/B,EAC+BA,SAAUC,EADzC,EACyCA,YAAaC,EADtD,EACsDA,OAGhDC,EAAY,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EACjBE,KAAI,SAAAC,GACJ,OAAOA,EAAMC,IACd,IACAC,KAAK,KAERzB,EAASD,GACTD,EAAUmB,GACVf,EAAoBgB,GACpBZ,EAAee,GACfjB,EAAO,kCAAD,OAAmCe,GAC1C,IACAO,OAAM,SAAAC,GAAS,IACX,WACLnB,EAAWoB,OACZ,CACF,GAAE,CAAClC,KAGF,6BACE,+BACGF,EAASqC,WAAT,kBAAiCnC,IAChC,UAACb,EAAD,CAAUiD,GAAE,UAAEtC,EAASuC,aAAX,aAAE,EAAgBC,KAA9B,WACE,SAAChD,EAAD,IADF,cAKA,UAACH,EAAD,CAAUiD,GAAE,UAAEtC,EAASuC,aAAX,iBAAE,EAAgBC,YAAlB,iBAAE,EAAsBD,aAAxB,aAAE,EAA6BC,KAA3C,WACE,SAAChD,EAAD,IADF,cAMF,UAACE,EAAD,YACE,yBACW,wCAARiB,GACC,gBACE8B,IAAI,yHACJC,IAAI,GACJC,MAAM,MACNC,OAAO,SAGT,gBAAKH,IAAK9B,EAAK+B,IAAKnC,EAAOoC,MAAM,QAAQE,MAAM,cAGnD,UAAClD,EAAD,YACE,wBAAKY,KACL,oCAAYF,MACZ,sCACA,uBAAII,KACJ,mCACA,uBAAII,cAIV,UAACjB,EAAD,YACE,mDAEA,UAACC,EAAD,YACE,SAACC,EAAD,CAAYwC,GAAG,OAAOC,MAAO,CAAErC,GAAIA,EAAIsC,KAAMxC,GAA7C,mBAIA,SAACF,EAAD,CAAYwC,GAAG,UAAUC,MAAO,CAAErC,GAAIA,EAAIsC,KAAMxC,GAAhD,4BAKJ,SAAC,EAAA8C,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/MovieDetail.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { BsArrowLeft } from 'react-icons/bs';\r\n\r\nconst BackLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst BackIcon = styled(BsArrowLeft)`\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst MoviDetailsWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst MovieTextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 30px;\r\n  gap: 18px;\r\n`;\r\nconst AddInformSection = styled.section`\r\n  margin: 10px 0;\r\n  padding: 20px 10px;\r\n  border-top: 1px solid rgba(128, 128, 128, 0.3);\r\n  border-bottom: 1px solid rgba(128, 128, 128, 0.3);\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  color: #d10505;\r\n\r\n  &.active {\r\n    color: black;\r\n  }\r\n`;\r\nexport {\r\n  BackIcon,\r\n  BackLink,\r\n  MoviDetailsWrapper,\r\n  MovieTextWrapper,\r\n  AddInformSection,\r\n  LinkWrapper,\r\n  StyledLink,\r\n};\r\n","import { Suspense, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { KEY, UrlForMovieDetails } from 'Utilities/variables';\r\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\r\nimport {\r\n  AddInformSection,\r\n  BackIcon,\r\n  BackLink,\r\n  MoviDetailsWrapper,\r\n  MovieTextWrapper,\r\n  LinkWrapper,\r\n  StyledLink,\r\n} from './MovieDetail.styled';\r\n\r\nconst MovieDetails = () => {\r\n  const location = useLocation();\r\n  const { id } = useParams();\r\n  const [rating, setRating] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [movieDescription, setMovieDescription] = useState('');\r\n  const [img, setImg] = useState('');\r\n  const [movieGenres, setMovieGenres] = useState('');\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    axios\r\n      .get(`${UrlForMovieDetails}${id}${KEY}`, { signal: controller.signal })\r\n      .then(res => {\r\n        const {\r\n          data: { vote_average, title, overview, poster_path, genres },\r\n        } = res;\r\n\r\n        const stringGenres = genres\r\n          ?.map(genre => {\r\n            return genre.name;\r\n          })\r\n          .join(' ');\r\n\r\n        setTitle(title);\r\n        setRating(vote_average);\r\n        setMovieDescription(overview);\r\n        setMovieGenres(stringGenres);\r\n        setImg(`https://image.tmdb.org/t/p/w500${poster_path}`);\r\n      })\r\n      .catch(err => {});\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [id]);\r\n\r\n  return (\r\n    <main>\r\n      <section>\r\n        {location.pathname === `/movies/${id}` ? (\r\n          <BackLink to={location.state?.from}>\r\n            <BackIcon />\r\n            Go back\r\n          </BackLink>\r\n        ) : (\r\n          <BackLink to={location.state?.from?.state?.from}>\r\n            <BackIcon />\r\n            Go back\r\n          </BackLink>\r\n        )}\r\n\r\n        <MoviDetailsWrapper>\r\n          <div>\r\n            {img === 'https://image.tmdb.org/t/p/w500null' ? (\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png\"\r\n                alt=\"\"\r\n                width=\"220\"\r\n                height=\"220\"\r\n              />\r\n            ) : (\r\n              <img src={img} alt={title} width=\"220px\" heigt=\"22 0px\" />\r\n            )}\r\n          </div>\r\n          <MovieTextWrapper>\r\n            <h2>{title}</h2>\r\n            <p>Rating: {rating}</p>\r\n            <h3>Overview</h3>\r\n            <p>{movieDescription}</p>\r\n            <b>Genres</b>\r\n            <p>{movieGenres}</p>\r\n          </MovieTextWrapper>\r\n        </MoviDetailsWrapper>\r\n      </section>\r\n      <AddInformSection>\r\n        <p>Additional information</p>\r\n\r\n        <LinkWrapper>\r\n          <StyledLink to=\"cast\" state={{ id: id, from: location }}>\r\n            Cast\r\n          </StyledLink>\r\n\r\n          <StyledLink to=\"reviews\" state={{ id: id, from: location }}>\r\n            Reviews\r\n          </StyledLink>\r\n        </LinkWrapper>\r\n      </AddInformSection>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Outlet />\r\n      </Suspense>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"names":["BackLink","styled","Link","BackIcon","BsArrowLeft","MoviDetailsWrapper","MovieTextWrapper","AddInformSection","LinkWrapper","StyledLink","NavLink","location","useLocation","id","useParams","useState","rating","setRating","title","setTitle","movieDescription","setMovieDescription","img","setImg","movieGenres","setMovieGenres","useEffect","controller","AbortController","axios","UrlForMovieDetails","KEY","signal","then","res","data","vote_average","overview","poster_path","genres","stringGenres","map","genre","name","join","catch","err","abort","pathname","to","state","from","src","alt","width","height","heigt","Suspense","fallback"],"sourceRoot":""}