{"version":3,"file":"static/js/892.f45c7edf.chunk.js","mappings":"+OAAA,IAAMA,EACJ,2FAEIC,EAAW,mGAEXC,EAAqB,sCACrBC,EAAM,2C,6HCJNC,EAAcC,EAAAA,GAAAA,MAAH,oJASXC,EAAeD,EAAAA,GAAAA,OAAH,kKAUZE,EAAaF,EAAAA,GAAAA,KAAH,+C,kBClBHG,EAAc,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SAC5B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAW3C,OACE,2BACE,UAACP,EAAD,CAAYQ,SANG,SAAAC,GACjBA,EAAEC,iBACFR,EAASI,EACV,EAGG,WACE,kBAAOK,QAAQ,GAAf,UACE,SAACd,EAAD,CACEe,KAAK,OACLC,MAAOP,EACPQ,YAAY,8BACZC,SAAU,SAAAN,GAAC,OAjBDO,EAiBiBP,EAAEQ,OAAOJ,WAf5CR,EADwB,KAATW,EAAc,CAAEV,MAAOU,GAAS,CAAC,GAD9B,IAAAA,CAiBC,OAIf,SAACjB,EAAD,CAAca,KAAK,SAAnB,UACE,SAAC,MAAD,CAAUM,MAAM,KAAKC,OAAO,aAKrC,E,oCC/BKC,GAAatB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAH,2CAIVwB,EAAWxB,EAAAA,GAAAA,GAAH,mECLDyB,EAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACJ,EAAD,iBACGE,QADH,IACGA,OADH,EACGA,EAAQG,KAAI,SAAAC,GACX,OACE,yBACE,SAACR,EAAD,CAAYS,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAA9C,SACGG,EAAMK,SAFFL,EAAME,GAMlB,KAGN,ECuBD,EAnCe,WACb,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAO5B,EAAP,KAAc6B,EAAd,KACA,GAA0CD,EAAAA,EAAAA,YAA1C,eAAOE,EAAP,KAAsBC,EAAtB,KAyBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVhC,QAA0BiC,IAAVjC,EAApB,CAGA,IAAMkC,EAAa,IAAIC,gBAWvB,OAVAC,EAAAA,EAAAA,IAAA,UACUhD,EAAAA,IADV,OACwBY,GAAS,CAC7BqC,OAAQH,EAAWG,SAEpBC,MAAK,SAAAC,GACJ,IACUC,EACND,EADFE,KAAQD,QAEVT,GAAiB,OAAIS,GACtB,IACI,WACLN,EAAWQ,OACZ,CAdA,CAeF,GAAE,CAAC1C,KAGF,4BACE,SAACL,EAAD,CAAaC,SAzBA,SAAAI,GACf6B,EAAS7B,EACV,KAwBG,SAACiB,EAAD,CAAeC,OAAQY,MAG5B,C","sources":["Utilities/variables.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.jsx","components/MoviesByQuery/MoviesByQuery.styled.js","components/MoviesByQuery/MoviesByQuery.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["const URL =\r\n  'https://api.themoviedb.org/3/trending/movie/day?api_key=02500819c0fb023207ee1042480b6c4f';\r\n\r\nconst UrlForQuery = `https://api.themoviedb.org/3/search/movie?api_key=02500819c0fb023207ee1042480b6c4f&page=1&query=`;\r\n\r\nconst UrlForMovieDetails = 'https://api.themoviedb.org/3/movie/';\r\nconst KEY = '?api_key=02500819c0fb023207ee1042480b6c4f';\r\n\r\nexport { UrlForQuery, URL, UrlForMovieDetails, KEY };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  display: inline-block;\r\n  width: 450px;\r\n  font-size: 18px;\r\n  outline: none;\r\n\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  position: absolute;\r\n  top: 20%;\r\n  left: 425px;\r\n  display: inline-flex;\r\n  border: 0;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SearchForm = styled.form`\r\n  position: relative;\r\n`;\r\nexport { StyledInput, SearchButton, SearchForm };\r\n","import { useSearchParams } from 'react-router-dom';\r\nimport { StyledInput, SearchButton, SearchForm } from './SearchMovies.styled';\r\nimport { ImSearch } from 'react-icons/im';\r\nexport const SerchMovies = ({ getQuery }) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const query = searchParams.get('query') ?? '';\r\n\r\n  const updateQuery = name => {\r\n    const params = name !== '' ? { query: name } : {};\r\n    setSearchParams(params);\r\n  };\r\n\r\n  const SubmitForm = e => {\r\n    e.preventDefault();\r\n    getQuery(query);\r\n  };\r\n  return (\r\n    <main>\r\n      <SearchForm onSubmit={SubmitForm}>\r\n        <label htmlFor=\"\">\r\n          <StyledInput\r\n            type=\"text\"\r\n            value={query}\r\n            placeholder=\"Write the name of the movie\"\r\n            onChange={e => updateQuery(e.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <SearchButton type=\"submit\">\r\n          <ImSearch width=\"10\" height=\"10\" />\r\n        </SearchButton>\r\n      </SearchForm>\r\n    </main>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  color: #2025c3;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  margin-top: 10px;\r\n  margin-left: 30px;\r\n`;\r\nexport { StyledLink, StyledUl };\r\n","import { useLocation } from 'react-router-dom';\r\nimport { StyledLink, StyledUl } from './MoviesByQuery.styled';\r\nexport const MoviesByQuery = ({ movies }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <StyledUl>\r\n      {movies?.map(movie => {\r\n        return (\r\n          <li key={movie.id}>\r\n            <StyledLink to={`${movie.id}`} state={{ from: location }}>\r\n              {movie.title}\r\n            </StyledLink>\r\n          </li>\r\n        );\r\n      })}\r\n    </StyledUl>\r\n  );\r\n};\r\n","import { SerchMovies } from 'components/SearchMovies/SearchMovies';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { UrlForQuery } from 'Utilities/variables';\r\nimport { MoviesByQuery } from 'components/MoviesByQuery/MoviesByQuery';\r\nconst Movies = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [moviesByQuery, setMoviesByQuery] = useState();\r\n\r\n  const getQuery = query => {\r\n    setQuery(query);\r\n  };\r\n  useEffect(() => {\r\n    if (query === '' || query === undefined) {\r\n      return;\r\n    }\r\n    const controller = new AbortController();\r\n    axios\r\n      .get(`${UrlForQuery}${query}`, {\r\n        signal: controller.signal,\r\n      })\r\n      .then(res => {\r\n        const {\r\n          data: { results },\r\n        } = res;\r\n        setMoviesByQuery([...results]);\r\n      });\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [query]);\r\n\r\n  return (\r\n    <div>\r\n      <SerchMovies getQuery={getQuery} />\r\n      <MoviesByQuery movies={moviesByQuery} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"names":["URL","UrlForQuery","UrlForMovieDetails","KEY","StyledInput","styled","SearchButton","SearchForm","SerchMovies","getQuery","useSearchParams","searchParams","setSearchParams","query","get","onSubmit","e","preventDefault","htmlFor","type","value","placeholder","onChange","name","target","width","height","StyledLink","NavLink","StyledUl","MoviesByQuery","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setQuery","moviesByQuery","setMoviesByQuery","useEffect","undefined","controller","AbortController","axios","signal","then","res","results","data","abort"],"sourceRoot":""}